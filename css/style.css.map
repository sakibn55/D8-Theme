{"version":3,"sources":["_reset.scss","style.css","_fonts.scss","_globals.scss","susy/language/susy/_container.scss","susy/output/support/_clearfix.scss","_header.scss","susy/language/susy/_span.scss","susy/output/shared/_direction.scss","susy/language/susy/_gutters.scss","_homepage.scss","_navbar.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["/* Eric Meyer's Reset CSS v2.0 - http://cssreset.com */\nhtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{border:0;font-size:100%;font:inherit;vertical-align:baseline;margin:0;padding:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:none}table{border-collapse:collapse;border-spacing:0}","html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{border:0;font-size:100%;font:inherit;vertical-align:baseline;margin:0;padding:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:none}table{border-collapse:collapse;border-spacing:0}/*!\r\nTYPEPLATE : STARTER KIT\r\nURL ........... http://typeplate.com\r\nVERSION ....... 2.1.0\r\nGithub ........ https://github.com/typeplate/starter-kit\r\nAUTHORS ....... Dennis Gaebel (@gryghostvisuals) & Zachary Kain (@zakkain)\r\nLICENSE ....... Creative Commmons Attribution 3.0 (http://creativecommons.org/licenses/by/3.0)\r\nLICENSE URL ... https://github.com/typeplate/starter-kit/blob/master/license.txt\r\n*/.typl8-breakword{word-wrap:break-word}.typl8-normal-wrap{word-wrap:normal}.typl8-inherit-wrap{word-wrap:auto}.typl8-font-feature--smcp{-webkit-font-feature-settings:\"smcp\";-moz-font-feature-settings:\"smcp\";-ms-font-feature-settings:\"smcp\";font-feature-settings:\"smcp\"}.typl8-font-feature--onum{-webkit-font-feature-settings:'onum';-moz-font-feature-settings:'onum';-ms-font-feature-settings:'onum';font-feature-settings:'onum'}.typl8-drop-cap:first-letter{float:left;margin:10px 10px 0 0;padding:0 20px;font-size:4em;font-family:inherit;line-height:1;text-indent:0;background:transparent;color:inherit}p+.typl8-drop-cap{text-indent:0;margin-top:0}html{font:normal 112.5%/1.65 serif}body{-webkit-hyphens:auto;-moz-hyphens:auto;-ms-hyphens:auto;hyphens:auto;word-wrap:break-word;color:#444444}small{font-size:65%}h1,h2,h3,h4,h5,h6{line-height:1;margin-top:0;text-rendering:optimizeLegibility;color:#222222}.typl8-tera{font-size:117px;font-size:6.5rem;margin-bottom:4.56923px;margin-bottom:0.25385rem}.typl8-giga{font-size:90px;font-size:5rem;margin-bottom:5.94px;margin-bottom:0.33rem}.typl8-mega{font-size:72px;font-size:4rem;margin-bottom:7.425px;margin-bottom:0.4125rem}h1,.typl8-alpha{font-size:60px;font-size:3.33333rem;margin-bottom:8.91px;margin-bottom:0.495rem}h2,.typl8-beta{font-size:48px;font-size:2.6667rem;margin-bottom:11.1375px;margin-bottom:0.61875rem}h3,.typl8-gamma{font-size:36px;font-size:2rem;margin-bottom:14.85px;margin-bottom:0.825rem}h4,.typl8-delta{font-size:24px;font-size:1.3333333333333333rem;margin-bottom:22.275px;margin-bottom:1.2375rem}h5,.typl8-epsilon{font-size:21px;font-size:1.16667rem;margin-bottom:25.45714px;margin-bottom:1.41429rem}h6,.typl8-zeta{font-size:18px;font-size:1rem;margin-bottom:29.7px;margin-bottom:1.65rem}p{margin:auto auto 1.5em}p+p{text-indent:1.5em;margin-top:-1.5em}input,abbr,acronym,blockquote,code,kbd,q,samp,var{-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre code{word-wrap:normal;white-space:-moz-pre-wrap;white-space:pre-wrap}pre{white-space:pre}code{white-space:pre;font-family:monospace}abbr{-webkit-font-variant:small-caps;-moz-font-variant:small-caps;-ms-font-variant:small-caps;font-variant:small-caps;font-weight:600;text-transform:lowercase;color:gray}abbr[title]:hover{cursor:help}.typl8-lining dt,.typl8-lining dd{display:inline;margin:0}.typl8-lining dt+dt:before,.typl8-lining dd+dt:before{content:\"\\A\";white-space:pre}.typl8-lining dd+dd:before{content:\", \"}.typl8-lining dd:before{content:\": \";margin-left:-0.2em}.typl8-dictionary-style dt{display:inline;counter-reset:definitions}.typl8-dictionary-style dt+dt:before{content:\", \";margin-left:-0.2em}.typl8-dictionary-style dd{display:block;counter-increment:definitions}.typl8-dictionary-style dd:before{content:counter(definitions, decimal) \". \"}.typl8-blockquote p:last-of-type{margin-bottom:-0.825em}.typl8-blockquote+figcaption{display:block;font-size:inherit;text-align:right}.typl8-blockquote+figcaption:before{content:\"-\"}.typl8-pull-quote{position:relative;padding:1em}.typl8-pull-quote:before,.typl8-pull-quote:after{height:1em;opacity:0.15;position:absolute;font-size:4em;color:#dc976e}.typl8-pull-quote:before{content:'“';top:0;left:0}.typl8-pull-quote:after{content:'”';bottom:0;right:0}html{font-size:100%}body{-webkit-font-smoothing:antialiased;background:#fff;font-family:sans-serif}*{box-sizing:border-box}.container{max-width:1100px;margin-left:auto;margin-right:auto}.container:after{content:\" \";display:block;clear:both}* html .clearfix{height:1%;overflow:visible}*+html .clearfix{min-height:1%}.clearfix:after{clear:both;content:\".\";display:block;height:0;visibility:hidden;font-size:0}.clr{clear:both}.main-header{height:300px;background:url(../images/hero.jpg) no-repeat center center}.logo{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;width:16.66667%;float:left;padding-left:.83333%;padding-right:.83333%}.logo img{max-width:100%}.main-navigation{margin-top:25px;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;width:41.66667%;float:right;padding-left:.83333%;padding-right:.83333%}.main-navigation li{float:left}.main-navigation a{display:block;color:#fff;text-decoration:none;padding:0 10px}.main-navigation a:hover{text-decoration:underline}main{margin-top:100px}.layout-content{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;width:66.66667%;float:left;padding-left:.83333%;padding-right:.83333%}.layout-sidebar-first{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;width:16.66667%;float:left;padding-left:.83333%;padding-right:.83333%}.layout-sidebar-second{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;width:16.66667%;float:right;padding-left:.83333%;padding-right:.83333%}.views-row+.views-row{margin:20px 0px}.main-navigation .dropdown .dropdown-menu a{color:black}\n","/*!\r\nTYPEPLATE : STARTER KIT\r\nURL ........... http://typeplate.com\r\nVERSION ....... 2.1.0\r\nGithub ........ https://github.com/typeplate/starter-kit\r\nAUTHORS ....... Dennis Gaebel (@gryghostvisuals) & Zachary Kain (@zakkain)\r\nLICENSE ....... Creative Commmons Attribution 3.0 (http://creativecommons.org/licenses/by/3.0)\r\nLICENSE URL ... https://github.com/typeplate/starter-kit/blob/master/license.txt\r\n*/\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Word Wrap\r\n * =======================================================================\r\n */\r\n\r\n.typl8-breakword {\r\n  word-wrap: break-word;\r\n}\r\n\r\n.typl8-normal-wrap {\r\n  word-wrap: normal;\r\n}\r\n\r\n.typl8-inherit-wrap {\r\n  word-wrap: auto;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   OpenType\r\n * =======================================================================\r\n */\r\n\r\n.typl8-font-feature--smcp {\r\n  -webkit-font-feature-settings: \"smcp\";\r\n  -moz-font-feature-settings: \"smcp\";\r\n  -ms-font-feature-settings: \"smcp\";\r\n  font-feature-settings: \"smcp\";\r\n}\r\n\r\n.typl8-font-feature--onum {\r\n  -webkit-font-feature-settings: 'onum';\r\n  -moz-font-feature-settings: 'onum';\r\n  -ms-font-feature-settings: 'onum';\r\n  font-feature-settings: 'onum';\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n * Drop Capitals:\r\n * Extend this object into your markup.\r\n\r\n   <p class=\"typl8-drop-cap\">What a wonderful day it is out there wouldn't you'd say?</p>\r\n\r\n  * =======================================================================\r\n */\r\n\r\n.typl8-drop-cap:first-letter {\r\n  float: left;\r\n  margin: 10px 10px 0 0;\r\n  padding: 0 20px;\r\n  font-size: 4em;\r\n  font-family: inherit;\r\n  line-height: 1;\r\n  text-indent: 0;\r\n  background: transparent;\r\n  color: inherit;\r\n}\r\n\r\np + .typl8-drop-cap {\r\n  text-indent: 0;\r\n  margin-top: 0;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Base Type\r\n * =======================================================================\r\n *\r\n */\r\n\r\nhtml {\r\n  font: normal 112.5%/1.65 serif; /* base font size 18px with 1.65 line-height */\r\n}\r\n\r\nbody {\r\n  -webkit-hyphens: auto;\r\n  -moz-hyphens: auto;\r\n  -ms-hyphens: auto;\r\n  hyphens: auto;\r\n  word-wrap: break-word;\r\n  color: #444444;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Fine Print\r\n * =======================================================================\r\n */\r\n\r\nsmall {\r\n  font-size: 65%;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Headings\r\n * =======================================================================\r\n */\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  line-height: 1;\r\n  margin-top: 0;\r\n  text-rendering: optimizeLegibility; /*  voodoo to enable ligatures and kerning | https://developer.mozilla.org/en-US/docs/CSS/text-rendering */\r\n  color: #222222;\r\n}\r\n\r\n\r\n/**\r\n* Extend included classes on any element of your\r\n* choosing for adjusting type based on the scale\r\n* provided.\r\n\r\n* For example:\r\n\r\n <h6 class=\"typl8-giga\">Awesome Headline</h6>\r\n <p class=\"typl8-tera\">a story about a dude</p>\r\n\r\n* Our Type Scale is as follows with px fallbacks\r\n* for IE 6-8 as they do not understand REM units.\r\n*\r\n* 18, 21, 24, 36, 48, 60, 72, 90, 117\r\n*\r\n*\r\n* Explanation:\r\n* margin-bottom = ( base font-size * base line-height ) / current font-size\r\n*\r\n* Makes sure that there's always one unit of measure's worth of space between shit\r\n* for headings. This is better than spacing using line-height because of the wrapping issue where we have\r\n* wrapping onto 2 lines with a high line-height.\r\n */\r\n\r\n.typl8-tera {\r\n  font-size: 117px;\r\n  font-size: 6.5rem; /* 117 / 18 = 6.5 */\r\n  margin-bottom: 4.56923px;\r\n  margin-bottom: 0.25385rem;\r\n}\r\n\r\n.typl8-giga {\r\n  font-size: 90px;\r\n  font-size: 5rem; /* 90 / 18 = 5 */\r\n  margin-bottom: 5.94px;\r\n  margin-bottom: 0.33rem;\r\n}\r\n\r\n.typl8-mega {\r\n  font-size: 72px;\r\n  font-size: 4rem; /* 72 / 18 = 4 */\r\n  margin-bottom: 7.425px;\r\n  margin-bottom: 0.4125rem;\r\n}\r\n\r\nh1,\r\n.typl8-alpha {\r\n  font-size: 60px;\r\n  font-size: 3.33333rem; /* 60 / 18 = 3.3333 */\r\n  margin-bottom: 8.91px;\r\n  margin-bottom: 0.495rem;\r\n}\r\n\r\nh2,\r\n.typl8-beta {\r\n  font-size: 48px;\r\n  font-size: 2.6667rem; /* 48 / 18 = 2.6667 */\r\n  margin-bottom: 11.1375px;\r\n  margin-bottom: 0.61875rem;\r\n}\r\n\r\nh3,\r\n.typl8-gamma {\r\n  font-size: 36px;\r\n  font-size: 2rem; /* 36 / 18 = 2 */\r\n  margin-bottom: 14.85px;\r\n  margin-bottom: 0.825rem;\r\n}\r\n\r\nh4,\r\n.typl8-delta {\r\n  font-size: 24px;\r\n  font-size: 1.3333333333333333rem; /* 24 / 18 = 1.3333 */\r\n  margin-bottom: 22.275px;\r\n  margin-bottom: 1.2375rem;\r\n}\r\n\r\nh5,\r\n.typl8-epsilon {\r\n  font-size: 21px;\r\n  font-size: 1.16667rem; /* 21 / 18 = 1.1667 */\r\n  margin-bottom: 25.45714px;\r\n  margin-bottom: 1.41429rem;\r\n}\r\n\r\nh6,\r\n.typl8-zeta {\r\n  font-size: 18px;\r\n  font-size: 1rem; /* 18 = 18 × 1 */\r\n  margin-bottom: 29.7px;\r\n  margin-bottom: 1.65rem;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Paragraphs and Indentation\r\n * =======================================================================\r\n */\r\n\r\np {\r\n  margin: auto auto 1.5em; /* bottom margin for paragraphs */\r\n}\r\n\r\np + p {\r\n  text-indent: 1.5em; /* indent subsequent paragraphs */\r\n  margin-top: -1.5em; /* no top margin on subsequent paragraphs */\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Hyphens\r\n * =======================================================================\r\n */\r\n\r\ninput,\r\nabbr,\r\nacronym,\r\nblockquote,\r\ncode,\r\nkbd,\r\nq,\r\nsamp,\r\nvar {\r\n  /* Accepted values: [ none | manual | auto ] */ /* http://meyerweb.com/eric/thoughts/2012/12/17/where-to-avoid-css-hyphenation */\r\n  -webkit-hyphens: none;\r\n  -moz-hyphens: none;\r\n  -ms-hyphens: none;\r\n  hyphens: none;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Code Blocks\r\n * =======================================================================\r\n */\r\n\r\npre code {\r\n  word-wrap: normal;\r\n  white-space: -moz-pre-wrap;\r\n  white-space: pre-wrap;\r\n}\r\n\r\npre {\r\n  white-space: pre;\r\n}\r\n\r\ncode {\r\n  white-space: pre;\r\n  font-family: monospace;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n * Abbreviations Markup\r\n * Extend this object into your markup\r\n\r\n  <abbr title=\"hyper text markup language\">HMTL</abbr>\r\n\r\n * Extend this object into your markup.\r\n * =======================================================================\r\n */\r\n\r\nabbr {\r\n  -webkit-font-variant: small-caps;\r\n  -moz-font-variant: small-caps;\r\n  -ms-font-variant: small-caps;\r\n  font-variant: small-caps;\r\n  font-weight: 600;\r\n  text-transform: lowercase;\r\n  color: gray;\r\n}\r\n\r\nabbr[title]:hover {\r\n  cursor: help; /* cursor changed to a question mark when it has a title */\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Definition Lists\r\n * =======================================================================\r\n */\r\n\r\n/**\r\n * Lining Definition Style Markup\r\n *\r\n  <dl class=\"typl8-lining\">\r\n    <dt><b></b></dt>\r\n    <dd></dd>\r\n  </dl>\r\n *\r\n * Extend this object into your markup.\r\n *\r\n */\r\n.typl8-lining dt,\r\n.typl8-lining dd {\r\n  display: inline;\r\n  margin: 0;\r\n}\r\n.typl8-lining dt + dt:before,\r\n.typl8-lining dd + dt:before {\r\n  content: \"\\A\";\r\n  white-space: pre;\r\n}\r\n.typl8-lining dd + dd:before {\r\n  content: \", \";\r\n}\r\n.typl8-lining dd:before {\r\n  content: \": \";\r\n  margin-left: -0.2em;\r\n}\r\n\r\n\r\n/**\r\n * Dictionary Definition Style Markup\r\n *\r\n  <dl class=\"typl8-dictionary-style\">\r\n    <dt><b></b></dt>\r\n      <dd></dd>\r\n  </dl>\r\n *\r\n * Extend this object into your markup.\r\n *\r\n */\r\n.typl8-dictionary-style dt {\r\n  display: inline;\r\n  counter-reset: definitions;\r\n}\r\n.typl8-dictionary-style dt + dt:before {\r\n  content: \", \";\r\n  margin-left: -0.2em;\r\n}\r\n.typl8-dictionary-style dd {\r\n  display: block;\r\n  counter-increment: definitions;\r\n}\r\n.typl8-dictionary-style dd:before {\r\n  content: counter(definitions, decimal) \". \";\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Blockquotes\r\n * =======================================================================\r\n */\r\n\r\n/**\r\n * Blockquote Markup\r\n *\r\n  <figure>\r\n    <blockquote class=\"typl8-blockquote\" cite=\"\">\r\n      <p></p>\r\n    </blockquote>\r\n    <figcaption>\r\n      <cite>\r\n        <small><a href=\"\"></a></small>\r\n      </cite>\r\n    </figcaption>\r\n  </figure>\r\n *\r\n * Extend this object into your markup.\r\n *\r\n */\r\n\r\n.typl8-blockquote p:last-of-type {\r\n  margin-bottom: -0.825em;\r\n}\r\n\r\n.typl8-blockquote + figcaption {\r\n  display: block;\r\n  font-size: inherit;\r\n  text-align: right;\r\n}\r\n\r\n.typl8-blockquote + figcaption:before {\r\n  content: \"-\"; /* \"-\" is your citation flourish */\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Pull Quotes\r\n * =======================================================================\r\n */\r\n\r\n/**\r\n * Pull Quotes Markup\r\n *\r\n  <aside class=\"typl8-pull-quote\">\r\n    <blockquote>\r\n      <p></p>\r\n    </blockquote>\r\n  </aside>\r\n *\r\n * Extend this object into your custom stylesheet.\r\n *\r\n */\r\n.typl8-pull-quote {\r\n  position: relative;\r\n  padding: 1em;\r\n}\r\n.typl8-pull-quote:before,\r\n.typl8-pull-quote:after {\r\n  height: 1em;\r\n  opacity: 0.15;\r\n  position: absolute;\r\n  font-size: 4em;\r\n  color: #dc976e;\r\n}\r\n.typl8-pull-quote:before {\r\n  content: '“';\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.typl8-pull-quote:after {\r\n  content: '”';\r\n  bottom: 0;\r\n  right: 0;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Figures\r\n * =======================================================================\r\n */\r\n\r\n/**\r\n * Figures Markup\r\n *\r\n  <figure>\r\n    <figcaption>\r\n      <strong>Fig. 4.2 | </strong>Type Anatomy, an excerpt from Mark Boulton's book<cite title=\"http://designingfortheweb.co.uk/book/part3/part3_chapter11.php\">\"Designing for the Web\"</cite>\r\n    </figcaption>\r\n  </figure>\r\n *\r\n * Extend this object into your markup.\r\n *\r\n */\r\n\r\n\r\n/**\r\n *\r\n * =======================================================================\r\n   Foot Notes\r\n * =======================================================================\r\n */\r\n\r\n/**\r\n * Footnote Markup : Replace 'X' with your unique number for each footnote\r\n *\r\n  <article>\r\n    <p><sup><a href=\"#fn-itemX\" id=\"fn-returnX\"></a></sup></p>\r\n    <footer>\r\n      <ol class=\"foot-notes\">\r\n        <li id=\"fn-itemX\"><a href=\"#fn-returnX\">↩</a></li>\r\n      </ol>\r\n    </footer>\r\n  </article>\r\n *\r\n * Extend this object into your markup.\r\n *\r\n */\r\n\r\n","/* =======================================================================\r\n## ++ Susy\r\n========================================================================== */\r\n$susy:(\r\n    container-position: center,\r\n    last-flow: to,\r\n    columns: 12,\r\n    gutters: 1/4,\r\n    gutter-position: inside,\r\n);\r\n\r\n/* =======================================================================\r\n## ++ Globals\r\n========================================================================== */\r\nhtml{\r\n    font-size: 100%;\r\n}\r\n\r\nbody{\r\n    -webkit-font-smoothing: antialiased;\r\n    background:#fff;\r\n    font-family: sans-serif;\r\n}\r\n\r\n*{\r\n    box-sizing:border-box;\r\n}\r\n\r\n.container{\r\n    @include container(1100px);\r\n}\r\n\r\n\r\n/* =======================================================================\r\n## ++ Cleafix\r\n========================================================================== */\r\n\r\n/* float clearing for IE6 */\r\n* html .clearfix{\r\n height: 1%;\r\n overflow: visible;\r\n}\r\n\r\n/* float clearing for IE7 */\r\n*+html .clearfix{\r\n min-height: 1%;\r\n}\r\n\r\n/* float clearing for everyone else */\r\n.clearfix:after{\r\n clear: both;\r\n content: \".\";\r\n display: block;\r\n height: 0;\r\n visibility: hidden;\r\n font-size: 0;\r\n}\r\n\r\n.clr{clear:both;}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n",".main-header{\r\n    height:300px;\r\n    background:url(../images/hero.jpg) no-repeat center center;\r\n}\r\n\r\n.logo{\r\n    @include span(2);\r\n    \r\n    img{\r\n        max-width:100%;\r\n    }\r\n}\r\n\r\n.main-navigation{\r\n    margin-top:25px;\r\n    @include span(5 last);\r\n    \r\n    li{\r\n        float: left;\r\n    }\r\n\r\n    a{\r\n        display: block;\r\n        color:#fff;\r\n        text-decoration: none;\r\n        padding: 0 10px;\r\n        \r\n        &:hover{\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n}","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","main{\r\n    margin-top: 100px;\r\n}\r\n\r\n.layout-content{\r\n    @include span(8);\r\n}\r\n\r\n.layout-sidebar-first{\r\n    @include span(2);\r\n}\r\n\r\n.layout-sidebar-second{\r\n    @include span(2 last);\r\n}\r\n.views-row + .views-row{\r\n  margin: 20px 0px;\r\n}",".main-navigation {\r\n  .dropdown {\r\n    .dropdown-menu {\r\n      a {\r\n        color: black;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}